// GRADLE-2087 workaround, perform after java plugin
status = project.hasProperty('preferredStatus')?project.preferredStatus:(version.contains('SNAPSHOT')?'snapshot':'release')

if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}


subprojects { project ->
    apply plugin: 'java' // Plugin as major conventions
    apply plugin: 'io.franzbecker.gradle-lombok'

    sourceCompatibility = 1.8

    javadoc {
      classpath = configurations.compile + configurations.compileOnly
      // failOnError = false
    }

    // Restore status after Java plugin
    status = rootProject.status

    task sourcesJar(type: Jar, dependsOn:classes) {
        from sourceSets.main.allSource
        classifier 'sources'
        extension 'jar'
    }

    task javadocJar(type: Jar, dependsOn:javadoc) {
        from javadoc.destinationDir
        classifier 'javadoc'
        extension 'jar'
    }

    configurations.create('sources')
    configurations.create('javadoc')
    configurations.archives {
        extendsFrom configurations.sources
        extendsFrom configurations.javadoc
    }

    artifacts {
        sources(sourcesJar) {
            // Weird Gradle quirk where type will be used for the extension, but only for sources
            type 'jar'
        }
        javadoc(javadocJar) {
            type 'javadoc'
        }
    }

    configurations {
        provided {
            description = 'much like compile, but indicates you expect the JDK or a container to provide it. It is only available on the compilation classpath, and is not transitive.'
            transitive = true
            visible = true
        }
    }

    project.sourceSets {
        main.compileClasspath += project.configurations.provided
        main.runtimeClasspath -= project.configurations.provided

        test.compileClasspath += project.configurations.provided
        test.runtimeClasspath += project.configurations.provided
    }
}
